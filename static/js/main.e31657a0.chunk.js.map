{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","wage_base","wage_evening_comp","wage_night_comp","wage_tax_percent","wage_employee_pension","wage_unemployment_insurance","wage_total","state","setState","handleChangeMultiple","evt","target","name","value","useEffect","document","title","className","Number","onClick","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"yJA2GeA,MAxGf,WACE,MAA0BC,mBAAS,CAEnCC,UAAW,KACXC,kBAAmB,KACnBC,gBAAiB,KACjBC,iBAAkB,GAClBC,sBAAuB,MACvBC,4BAA6B,MAE7BC,WAAY,IATZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,SAASC,EAAqBC,GAC5BF,EAAS,2BAEJD,GAFG,kBAILG,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,SAKlC,OAfAC,qBAAU,WACVC,SAASC,MAAT,8BAAwCT,EAAMP,UAA9C,aAeE,qBAAKiB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mDAAsBC,OAAOX,EAAMP,WAAakB,OAAOX,EAAMN,sBAC7D,uCAAUiB,OAAOX,EAAMP,YAAckB,OAAOX,EAAMJ,kBAAoBe,OAAOX,EAAMH,uBAAyBc,OAAOX,EAAMF,iCACzH,kDAAqBa,OAAOX,EAAMP,WAAekB,OAAOX,EAAMP,YAAckB,OAAOX,EAAMJ,kBAAoBe,OAAOX,EAAMH,uBAAyBc,OAAOX,EAAMF,iCAChK,wBAAQc,QAASV,EAAjB,oBAEA,iCACE,8CAEE,uBACEW,KAAK,SACLR,KAAK,YACLC,MAAON,EAAMP,UACbqB,SAAUZ,OAGd,uBACA,yDAEE,uBACEW,KAAK,SACLR,KAAK,oBACLC,MAAON,EAAMN,kBACboB,SAAUZ,OAGd,uBACA,uDAEE,uBACEW,KAAK,SACLR,KAAK,kBACLC,MAAON,EAAML,gBACbmB,SAAUZ,OAGd,uBACA,gDAEE,uBACEW,KAAK,SACLR,KAAK,mBACLC,MAAON,EAAMJ,iBACbkB,SAAUZ,OAGd,uBACA,qDAEE,uBACEW,KAAK,SACLR,KAAK,wBACLC,MAAON,EAAMH,sBACbiB,SAAUZ,OAGd,uBACA,2DAEE,uBACEW,KAAK,SACLR,KAAK,8BACLC,MAAON,EAAMF,4BACbgB,SAAUZ,gBCtFTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCEdQ,EAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAQ1BX,K","file":"static/js/main.e31657a0.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n  \r\n  wage_base: 2500,\r\n  wage_evening_comp: 4.67,\r\n  wage_night_comp: 9.43,\r\n  wage_tax_percent: 0.2,\r\n  wage_employee_pension: 0.0719,\r\n  wage_unemployment_insurance: 0.0136,\r\n\r\n  wage_total: 0\r\n\r\n  })\r\n\r\n\r\n  useEffect(() => {    // Update the document title using the browser API   \r\n  document.title = `You're getting paid ${state.wage_base}â‚¬`;  \r\n  });\r\n\r\n\r\n  function handleChangeMultiple(evt) {\r\n    setState({\r\n  \r\n      ...state,\r\n  \r\n      [evt.target.name]: evt.target.value\r\n  \r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Wage before taxes {Number(state.wage_base) + Number(state.wage_evening_comp)}</p>\r\n        <p>Taxes {Number(state.wage_base) * (Number(state.wage_tax_percent) + Number(state.wage_employee_pension) + Number(state.wage_unemployment_insurance))}</p>\r\n        <p>Wage after taxes {Number(state.wage_base) -  (Number(state.wage_base) * (Number(state.wage_tax_percent) + Number(state.wage_employee_pension) + Number(state.wage_unemployment_insurance)))}</p>\r\n        <button onClick={handleChangeMultiple}>Update</button>\r\n\r\n        <form>\r\n          <label>\r\n            Base wage\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_base\"\r\n              value={state.wage_base}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n          <br/>        \r\n          <label>\r\n            Evening compensation\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_evening_comp\"\r\n              value={state.wage_evening_comp}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n          <br/>        \r\n          <label>\r\n            Night compensation\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_night_comp\"\r\n              value={state.wage_night_comp}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n          <br/>        \r\n          <label>\r\n            Tax percent\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_tax_percent\"\r\n              value={state.wage_tax_percent}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n          <br/>        \r\n          <label>\r\n            Employee pension\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_employee_pension\"\r\n              value={state.wage_employee_pension}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n          <br/>        \r\n          <label>\r\n            Unemployment insurance\r\n            <input\r\n              type=\"number\"\r\n              name=\"wage_unemployment_insurance\"\r\n              value={state.wage_unemployment_insurance}\r\n              onChange={handleChangeMultiple}\r\n            />\r\n          </label>\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//ReactDOM.render(<App />, document.querySelector('#app'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}